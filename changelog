ounit-2.0.0

  - major rewrite of all the code!
  - implements a quickfix compatible way of outputing failures, it jumps to
   	the a position in the logfile to help you debug the problem.
	- better configuration setup: environment variable, command line options,
	  configuration files (OUnitConf)
	- improved output of the tests: output HTML report, output JUnit report,
	  systematic logging to a file (OUnitLogger*)
	- choose how to run a test: in parallel using processes (auto-detect number
	  of CPU), concurrently using threads or sequentialy as before.
	- choose which test to run: just run test in sequence (simple) or run the
	  tests that failed in the last run first and skip the success if they are
	  still failing (failfirst) (OUnitChooser)
	- OUnitBracket: use a registration in the context to make it easier to use
	- remove all useless functions in the OUnit2 interface
	- non-fatal section: allow to fail inside non-fatal section without
	  quitting immediately the whole test
	- refactor OUnit.ml to still provides the same function but using OUnit2.
	-  timer that makes tests fail if they take too long (runner = processes)
	- allow to parametrize filenames so that you can use
	  OUNIT_OUTPUT_FILE=ounit-$(suite_name)-$(shard_id).log
		and have $(suite_name) replace by the test suite name
	- create locks to avoid accessing the same resources within a single process
	  or the whole application (OUnitShared)
	- OUnitTestData locate test data, if any.
	- enforce environment cleanness by checking it before and after the test
	  (e.g check that Sys.getcwd is the same).

ounit-1.1.2

  - regenerate with oasis v0.3.0~rc6

ounit-1.1.1

  - bracket now enforce returning unit
  - update examples
  - ListSimpleMake now use the provided comparator for all elements

ounit-1.1.0

  - Add a ~pp_diff parameter to assert_equal and some classic diff operations
    (Closes: #635, #642)
  - Add an assert_command function (Closes: #641)
  - Add a bracket_tmpfile to ease temporary file use
  - Enhance documentation, translate the docbook manual into ocamldoc and
    add content
  - Allow to add extra command line arguments to run_test_tt_main
    (Closes: #640)
  - Add a -list-test options to run_test_tt_main, to list available tests
  - Skip tests when using "-only-test", rather than removing it. This way
    the path is the same even if some tests don't pass (Closes: #637)
  - Add backtrace support (Closes: #639), thanks to Michael Ekstrand
  - Use OASIS
  - Move to OCaml Forge: http://ounit.forge.ocamlcore.org
  - Maintainance is now done by Sylvain Le Gall (OCamlCore SARL), thanks to
    Maas-Maarten Zeeman for all his work

ounit-1.0.3

  - Add the possibility to skip test and mark tests as todo

ounit-1.0.2

  - Refactored OUnit package. The test result and test event data structures
    are now clearly separated.

ounit-1.0.1

  - Added optional compare function to assert_equal, and a float compare
    function. Thanks go to Daniel Buenzli

ounit-1.0.0

  - Add bracket support (Thanks go to Laurent Vaucher)

  - Add an example for bracket usage

ounit-0.1.0

  - Makefile improvements

ounit-0.0.3

  - Added findlib support

ounit-0.0.2

  - Added assert_raises which checkes if an exception is raised.
    (thanks go to Keita Yamaguchi, for the idea)

  - Fixed (hopefully) the .depend file

ounit-0.0.1

  - First release of ocaml-unit
